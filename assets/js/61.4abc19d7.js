(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{373:function(_,v,e){"use strict";e.r(v);var t=e(8),o=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("p",[_._v("到此我们已经将"),e("strong",[_._v("Vuex 3.0.1")]),_._v("的源码已经全部解读完毕了。本文对整个源码进行总结，并列举一些常见问题。")]),_._v(" "),e("h2",{attrs:{id:"一、总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、总结"}},[_._v("#")]),_._v(" 一、总结")]),_._v(" "),e("h3",{attrs:{id:"_1-vuex是一个vue插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-vuex是一个vue插件"}},[_._v("#")]),_._v(" 1. Vuex是一个Vue插件")]),_._v(" "),e("p",[e("strong",[_._v("Vuex")]),_._v(" 是一个状态管理库，也是一个Vue插件，它将"),e("strong",[_._v("Vue")]),_._v("应用中的共享状态抽取出来，以"),e("strong",[_._v("集中式")]),_._v("的方式管理。所有的Vue插件都应该是一个函数或者是一个具有"),e("strong",[_._v("install")]),_._v("方法的对象。"),e("strong",[_._v("Vuex")]),_._v("就是一个具有"),e("code",[_._v("install")]),_._v("方法的对象，当我们执行"),e("code",[_._v("Vue.use(Vuex)")]),_._v("时就会调用"),e("code",[_._v("Vuex.install")]),_._v("方法，将"),e("code",[_._v("Vue")]),_._v("作为参数传入。执行后经过如下处理过程：")]),_._v(" "),e("ul",[e("li",[_._v("判断是否已经安装过，如果已经安装过，则不重复安装")]),_._v(" "),e("li",[_._v("将传入的"),e("code",[_._v("Vue")]),_._v("构造函数赋值给全局的"),e("code",[_._v("Vue")]),_._v("变量，从而令"),e("code",[_._v("Vue")]),_._v("构造函数和"),e("code",[_._v("Vuex")]),_._v("关联，后续创建"),e("code",[_._v("Store")]),_._v("时创建"),e("code",[_._v("Vue")]),_._v("实例使用该构造函数")]),_._v(" "),e("li",[_._v("在"),e("strong",[_._v("Vue2.0")]),_._v("以上的版本中，混入"),e("code",[_._v("beforeCreate")]),_._v("钩子函数，在"),e("strong",[_._v("Vue2.0")]),_._v("以下的版本使用重写"),e("code",[_._v("Vue.prototype._init")]),_._v("方法的方式，在初始化Vue实例时将"),e("code",[_._v("Vuex")]),_._v("的"),e("code",[_._v("Store")]),_._v("实例注入到所有的实例中。从而实现根应用下所有的子组件都可以访问到"),e("code",[_._v("Store")]),_._v("实例。")])]),_._v(" "),e("h3",{attrs:{id:"_2-store实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-store实例"}},[_._v("#")]),_._v(" 2. Store实例")]),_._v(" "),e("p",[e("code",[_._v("Store")]),_._v("类是"),e("strong",[_._v("Vuex")]),_._v("的核心，"),e("strong",[_._v("Vuex")]),_._v("所有的状态管理都是基于"),e("code",[_._v("Store")]),_._v("实例。"),e("code",[_._v("Store")]),_._v("实例中包含了"),e("code",[_._v("state")]),_._v("、"),e("code",[_._v("getters")]),_._v("、"),e("code",[_._v("mutations")]),_._v("、"),e("code",[_._v("actions")]),_._v("、"),e("code",[_._v("modules")]),_._v("等属性和方法。在初始化一个"),e("code",[_._v("Store")]),_._v("实例时，会执行"),e("code",[_._v("Store")]),_._v("类的构造函数"),e("code",[_._v("new Store(options)")]),_._v("。")]),_._v(" "),e("p",[e("code",[_._v("options")]),_._v("属性如下：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("state")]),_._v("：状态对象，默认为空对象")]),_._v(" "),e("li",[e("code",[_._v("actions")]),_._v("：action对象，默认为空对象")]),_._v(" "),e("li",[e("code",[_._v("mutations")]),_._v("：mutations对象，默认为空对象")]),_._v(" "),e("li",[e("code",[_._v("getters")]),_._v("：getters对象，默认为空对象")]),_._v(" "),e("li",[e("code",[_._v("modules")]),_._v("：模块对象，默认为空对象")]),_._v(" "),e("li",[e("code",[_._v("plugins")]),_._v("：插件列表，默认为空数组")]),_._v(" "),e("li",[e("code",[_._v("strict")]),_._v("：是否为严格模式，默认为"),e("code",[_._v("false")])])]),_._v(" "),e("p",[_._v("执行过程如下：")]),_._v(" "),e("ul",[e("li",[_._v("使用script引入时会自动安装"),e("code",[_._v("Vuex")])]),_._v(" "),e("li",[_._v("通过"),e("code",[_._v("options.state")]),_._v("，获取state的值，"),e("code",[_._v("options.state")]),_._v("可以是函数，函数返回值作为state的值；"),e("code",[_._v("state")]),_._v("的默认值是空对象")]),_._v(" "),e("li",[_._v("初始化各种属性：\n"),e("ul",[e("li",[e("code",[_._v("_committing")]),_._v("：一个布尔值，用于判断当前是否处于"),e("code",[_._v("mutation")]),_._v("中，默认为"),e("code",[_._v("false")])]),_._v(" "),e("li",[e("code",[_._v("_committing")]),_._v("：是否正在提交，默认值为"),e("code",[_._v("false")]),_._v("，当该值被标记为"),e("code",[_._v("true")]),_._v("时，则"),e("code",[_._v("state")]),_._v("允许被修改。")]),_._v(" "),e("li",[e("code",[_._v("_actions")]),_._v("：存放所有"),e("code",[_._v("action")]),_._v("的对象，默认值为空对象。")]),_._v(" "),e("li",[e("code",[_._v("_actionSubscribers")]),_._v("：存放"),e("code",[_._v("action")]),_._v("订阅者，默认值为空数组，在使用"),e("code",[_._v("dispatch")]),_._v("派发"),e("code",[_._v("action")]),_._v("时，会遍历并触发订阅者")]),_._v(" "),e("li",[e("code",[_._v("_mutations")]),_._v("：存放所有"),e("code",[_._v("mutation")]),_._v("的对象，默认值为空对象。")]),_._v(" "),e("li",[e("code",[_._v("_wrappedGetters")]),_._v("：存放所有"),e("code",[_._v("getters")]),_._v("的包装函数的对象，默认值为空对象。")]),_._v(" "),e("li",[e("code",[_._v("_modules")]),_._v("：根模块树，是"),e("code",[_._v("Vuex")]),_._v("模块化支持的基础，使用"),e("code",[_._v("ModuleCollection")]),_._v("类实例化，是具有一个"),e("code",[_._v("root")]),_._v("属性的模块树")]),_._v(" "),e("li",[e("code",[_._v("_modulesNamespaceMap")]),_._v("：模块命名空间映射，定义的"),e("strong",[_._v("Vuex模块")]),_._v("都会被映射到该对象的属性中，辅助函数的模块会从该对象获取。")]),_._v(" "),e("li",[e("code",[_._v("_subscribers")]),_._v("："),e("code",[_._v("mutation")]),_._v("订阅列表，默认值为空数组，在使用"),e("code",[_._v("commit")]),_._v("提交"),e("code",[_._v("mutation")]),_._v("时，会遍历该数组并执行订阅者")]),_._v(" "),e("li",[e("code",[_._v("_watcherVM")]),_._v("：一个"),e("code",[_._v("Vue")]),_._v("实例，用于触发"),e("code",[_._v("watcher")]),_._v("，是"),e("code",[_._v("store.watch")]),_._v("API实现的基础")]),_._v(" "),e("li",[e("code",[_._v("strict")]),_._v("：是否开启严格模式，从"),e("code",[_._v("options")]),_._v("中获取，默认值为"),e("code",[_._v("false")]),_._v("。在严格模式下，"),e("code",[_._v("state")]),_._v("只能通过"),e("code",[_._v("mutation")]),_._v("修改")])])]),_._v(" "),e("li",[_._v("执行"),e("code",[_._v("installModule(this, state, [], this._modules.root)")]),_._v("安装根模块：\n"),e("ul",[e("li",[_._v("带命名空间的模块存入"),e("code",[_._v("_modulesNamespaceMap")]),_._v("对象中")]),_._v(" "),e("li",[_._v("将"),e("code",[_._v("state")]),_._v("转为嵌套的对象")]),_._v(" "),e("li",[_._v("创建局部上下文，返回一个包含"),e("code",[_._v("dispatch")]),_._v("，"),e("code",[_._v("commit")]),_._v("，"),e("code",[_._v("getters")]),_._v("，"),e("code",[_._v("state")]),_._v("的对象")]),_._v(" "),e("li",[_._v("注册"),e("code",[_._v("mutations")]),_._v("到"),e("code",[_._v("_mutations")]),_._v("，有命名空间的键名会带上命名空间，同名的"),e("code",[_._v("mutation")]),_._v("其处理函数存放在同一个数组里，处理函数只接收局部上文的"),e("code",[_._v("state")])]),_._v(" "),e("li",[_._v("注册"),e("code",[_._v("actions")]),_._v("到"),e("code",[_._v("_actions")]),_._v("，有命名空间的键名会带上命名空间，同名的"),e("code",[_._v("action")]),_._v("其处理函数存放在同一个数组里，处理函数接收局部上下文和根上下文的"),e("code",[_._v("state")]),_._v("和"),e("code",[_._v("getters")]),_._v("作为参数")]),_._v(" "),e("li",[_._v("注册"),e("code",[_._v("getters")]),_._v("，将"),e("code",[_._v("getters")]),_._v("包装后存到"),e("code",[_._v("_wrappedGetters")]),_._v("对象中，依次接收局部上下文的"),e("code",[_._v("state")]),_._v("、"),e("code",[_._v("getters")]),_._v("和根局部上下文的"),e("code",[_._v("state")]),_._v("、"),e("code",[_._v("getters")])]),_._v(" "),e("li",[_._v("遍历子模块，递归安装子模块")])])]),_._v(" "),e("li",[_._v("定义响应式数据\n"),e("ul",[e("li",[_._v("创建"),e("code",[_._v("_vm")]),_._v("属性，其值为"),e("strong",[_._v("Vue实例")]),_._v("，以"),e("code",[_._v("state")]),_._v("作为"),e("code",[_._v("data.$$state")]),_._v("选项传入，包装后的"),e("code",[_._v("getters")]),_._v("作为"),e("code",[_._v("computed")]),_._v("选项")]),_._v(" "),e("li",[_._v("将"),e("code",[_._v("store.getters")]),_._v("代理至"),e("code",[_._v("_vm")]),_._v("实例的同名属性（计算属性）")]),_._v(" "),e("li",[_._v("严格模式设置")]),_._v(" "),e("li",[_._v("销毁旧的实例")])])]),_._v(" "),e("li",[_._v("安装插件")])]),_._v(" "),e("p",[_._v("实例化后的"),e("code",[_._v("store")]),_._v("还具有一套API供外部调用，这些API如下：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("dispatch(type, payload)")]),_._v("：派发"),e("code",[_._v("action")]),_._v("，返回一个"),e("code",[_._v("Promise")]),_._v("对象")]),_._v(" "),e("li",[e("code",[_._v("commit(type, payload, options)")]),_._v("：提交"),e("code",[_._v("mutation")]),_._v("，返回一个"),e("code",[_._v("Promise")]),_._v("对象")]),_._v(" "),e("li",[e("code",[_._v("replaceState(state)")]),_._v("：替换根"),e("code",[_._v("state")])]),_._v(" "),e("li",[e("code",[_._v("registerModule(path, module, options)")]),_._v("：注册动态模块")]),_._v(" "),e("li",[e("code",[_._v("unregisterModule(path)")]),_._v("：注销动态模块")]),_._v(" "),e("li",[e("code",[_._v("hasModule(path)")]),_._v("：判断是否已经注册同名的模块")]),_._v(" "),e("li",[e("code",[_._v("watch(getter, cb, options)")]),_._v("：监听"),e("code",[_._v("getter")]),_._v("，返回一个"),e("code",[_._v("watcher")]),_._v("对象")]),_._v(" "),e("li",[e("code",[_._v("subscribe(fn)")]),_._v("：订阅"),e("code",[_._v("mutation")]),_._v("，返回一个取消订阅的函数")]),_._v(" "),e("li",[e("code",[_._v("subscribeAction(fn)")]),_._v("：订阅"),e("code",[_._v("action")]),_._v("，返回一个取消订阅的函数")]),_._v(" "),e("li",[e("code",[_._v("hotUpdate(newOptions)")]),_._v("：热更新")])]),_._v(" "),e("h3",{attrs:{id:"_3-辅助方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-辅助方法"}},[_._v("#")]),_._v(" 3. 辅助方法")]),_._v(" "),e("p",[e("code",[_._v("Vuex")]),_._v("为我们提供了几个辅助函数，便于我们在项目中使用"),e("strong",[_._v("store实例")]),_._v("的状态数据。函数列表如下：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("mapState")]),_._v("： 映射"),e("code",[_._v("store")]),_._v("的"),e("code",[_._v("state")]),_._v("属性到组件的"),e("code",[_._v("computed")]),_._v("属性中。")]),_._v(" "),e("li",[e("code",[_._v("mapGetters")]),_._v("：映射"),e("code",[_._v("store")]),_._v("的"),e("code",[_._v("getters")]),_._v("属性到组件的"),e("code",[_._v("computed")]),_._v("属性中。")]),_._v(" "),e("li",[e("code",[_._v("mapActions")]),_._v("：映射"),e("code",[_._v("store")]),_._v("的"),e("code",[_._v("actions")]),_._v("属性到组件的"),e("code",[_._v("methods")]),_._v("属性中。")]),_._v(" "),e("li",[e("code",[_._v("mapMutations")]),_._v("：映射"),e("code",[_._v("store")]),_._v("的"),e("code",[_._v("mutations")]),_._v("属性到组件的"),e("code",[_._v("methods")]),_._v("属性中。")]),_._v(" "),e("li",[e("code",[_._v("createNamespacedHelpers")]),_._v("：创建一个带命名空间的辅助函数，它们在使用前都已经绑定在了给定的命名空间。")])]),_._v(" "),e("h3",{attrs:{id:"_4-插件系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-插件系统"}},[_._v("#")]),_._v(" 4. 插件系统")]),_._v(" "),e("p",[e("strong",[_._v("Vuex")]),_._v("提供插件机制来扩展其功功能，插件是一个函数，接收一个"),e("code",[_._v("store")]),_._v("实例作为参数。并且内置了"),e("code",[_._v("devtoolPlugin")]),_._v("插件和"),e("code",[_._v("Logger")]),_._v("插件。")]),_._v(" "),e("p",[e("code",[_._v("Vuex")]),_._v("完整的架构图如下：")]),_._v(" "),e("p",[e("img",{attrs:{src:"/images/Vuex.png",alt:"Vuex"}})]),_._v(" "),e("h2",{attrs:{id:"二、常见问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、常见问题"}},[_._v("#")]),_._v(" 二、常见问题")]),_._v(" "),e("h3",{attrs:{id:"_1-如果在mutation中执行异步操作会怎么样"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-如果在mutation中执行异步操作会怎么样"}},[_._v("#")]),_._v(" 1. 如果在"),e("code",[_._v("mutation")]),_._v("中执行异步操作会怎么样？")]),_._v(" "),e("p",[_._v("在严格模式下会提示不在"),e("code",[_._v("mutation")]),_._v("外部修改"),e("code",[_._v("state")]),_._v("。这是因为，执行"),e("code",[_._v("mutation")]),_._v("时会临时将"),e("code",[_._v("_committing")]),_._v("设置为"),e("code",[_._v("true")]),_._v("，执行完成后会同步将"),e("code",[_._v("_committing")]),_._v("恢复为原来的值。如果是个异步操作，此时"),e("code",[_._v("_committing")]),_._v("的值为"),e("code",[_._v("false")]),_._v("，所以会提示。虽然给出了提示，但是"),e("code",[_._v("state")]),_._v("的状态其实已经变化了，所以仍然会触发"),e("code",[_._v("watcher")]),_._v("，页面使用到了"),e("code",[_._v("state")]),_._v("依然会更新。")]),_._v(" "),e("h3",{attrs:{id:"_2-如果不使用mutation直接修改state会怎样"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-如果不使用mutation直接修改state会怎样"}},[_._v("#")]),_._v(" 2. 如果不使用"),e("code",[_._v("mutation")]),_._v("直接修改"),e("code",[_._v("state")]),_._v("会怎样？")]),_._v(" "),e("p",[_._v("在严格模式下会提示不在"),e("code",[_._v("mutation")]),_._v("外部修改"),e("code",[_._v("state")]),_._v("，同理"),e("code",[_._v("state")]),_._v("的状态其实已经变化了，所以仍然会触发"),e("code",[_._v("watcher")]),_._v("，页面使用到了"),e("code",[_._v("state")]),_._v("依然会更新。")]),_._v(" "),e("h3",{attrs:{id:"_3-辅助函数是如何通过命名空间查找到对应模块的state、getters、mutation和action的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-辅助函数是如何通过命名空间查找到对应模块的state、getters、mutation和action的"}},[_._v("#")]),_._v(" 3. 辅助函数是如何通过命名空间查找到对应模块的"),e("code",[_._v("state")]),_._v("、"),e("code",[_._v("getters")]),_._v("、"),e("code",[_._v("mutation")]),_._v("和"),e("code",[_._v("action")]),_._v("的？")]),_._v(" "),e("p",[_._v("辅助函数会根据传入的命名空间，从"),e("code",[_._v("store._modulesNamespaceMap")]),_._v("找到对应的模块，每一个模块都有一个"),e("code",[_._v("context")]),_._v("属性，该属性是一个包含"),e("code",[_._v("state")]),_._v("、"),e("code",[_._v("getters")]),_._v("、"),e("code",[_._v("commit")]),_._v("、"),e("code",[_._v("dispatch")]),_._v("的局部上下文对象，从中可以获取以上的属性。而"),e("code",[_._v("getters")]),_._v("是还可以通过命名空间直接从"),e("code",[_._v("store.getters")]),_._v("获取，"),e("code",[_._v("Vuex")]),_._v("内部采用的第二种方式。")])])}),[],!1,null,null,null);v.default=o.exports}}]);