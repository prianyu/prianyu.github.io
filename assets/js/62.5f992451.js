(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{376:function(t,s,e){"use strict";e.r(s);var a=e(8),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("本章节是 VueRouter 3.6.5源码解读，代码逐行解析文章正在持续更新中...\n所有源码注释请查看"),e("a",{attrs:{href:"https://github.com/prianyu/vue-router-3.6.5",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/prianyu/vue-router-3.6.5"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"开发环境启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发环境启动"}},[t._v("#")]),t._v(" 开发环境启动")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装依赖")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动示例localhost:8080")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" dev\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("目录下的"),e("code",[t._v("webpack.config.js")]),t._v("文件会配置导入包的路径别名，在"),e("code",[t._v("examples")]),t._v("目录下添加或修改示例代码就可以进行源码调试。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// examples/webpack.config.js")]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("resolve")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("alias")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("vue")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue/dist/vue.esm.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue-router'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'..'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处将vue-router的导入指向了src目录")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue-router/composables'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'..'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src/composables'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("h2",{attrs:{id:"目录结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- components "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 组件目录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- link.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# RouterLink组件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- view.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# RouterView组件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- composables "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 组合式API(Vue3)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- create-matcher.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建匹配器")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- create-route-map.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建路由映射表")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- entries "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包入口文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# history模块")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- abstract.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 抽象history")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- base.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基础history")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- hash.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hash模式history")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- html5.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# history模式的history")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- index.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根入口文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- install.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装函数")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- router.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# VueRouter类")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- util "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 工具函数目录")]),t._v("\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("h2",{attrs:{id:"几个类型和概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#几个类型和概念"}},[t._v("#")]),t._v(" 几个类型和概念")]),t._v(" "),e("p",[t._v("在vue-router中，有几个核心的数据类型对于理解和使用Vue-Router至关重要，这些类型包括："),e("code",[t._v("Route")]),t._v("、"),e("code",[t._v("RouteRecord")]),t._v("、"),e("code",[t._v("RouteConfig")]),t._v("和"),e("code",[t._v("Location")]),t._v("。")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("Route")])])]),t._v(" "),e("p",[e("code",[t._v("Route")]),t._v("是路由对象，表示路由的状态信息，平时使用时，像路由导航守卫接收的"),e("code",[t._v("from")]),t._v("、"),e("code",[t._v("to")]),t._v("以及通过"),e("code",[t._v("this.$route")]),t._v("访问到的"),e("code",[t._v("$route")]),t._v("都是"),e("code",[t._v("Route")]),t._v("类型。")]),t._v(" "),e("div",{staticClass:"language-ts line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n  name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  hash"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n  query"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Dictionary"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  params"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Dictionary"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  fullPath"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n  matched"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RouteRecord"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  redirectedFrom"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n  meta"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RouteMeta\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[e("code",[t._v("RouteConfig")])])]),t._v(" "),e("p",[e("code",[t._v("RouteConfig")]),t._v("是路由配置对象的类型，每一条路由的配置就是一个"),e("code",[t._v("RouteConfig")]),t._v("对象。在实例化"),e("code",[t._v("Router")]),t._v("对象时，传入的"),e("code",[t._v("routes")]),t._v("参数就是"),e("code",[t._v("RouteConfig")]),t._v("对象的数组。")]),t._v(" "),e("div",{staticClass:"language-ts line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RouteConfig")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由路径")]),t._v("\n  name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由名称")]),t._v("\n  component"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Component "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由组件")]),t._v("\n  components"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Component "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命名视图组件")]),t._v("\n  children"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RouteConfig"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子路由")]),t._v("\n  redirect"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Location "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由重定向")]),t._v("\n  alias"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由别名")]),t._v("\n  meta"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由元信息")]),t._v("\n  props"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Object "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Route"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Object "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Object "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由组件的props配置")]),t._v("\n  beforeEnter"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Route"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Route"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由前置守卫")]),t._v("\n  caseSensitive"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配规则是否区分大小写")]),t._v("\n  pathToRegexpOptions"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" sensitive"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strict"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" end"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译正则的选项")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("ol",{attrs:{start:"3"}},[e("li",[e("code",[t._v("RouteRecord")])])]),t._v(" "),e("p",[t._v("路由记录，Vue-Router在实例化路由实例的时候，会根据传入的"),e("code",[t._v("routes")]),t._v("初始化路由记录，将路由记录转为各种映射对象（"),e("code",[t._v("pathList")]),t._v("，"),e("code",[t._v("nameMap")]),t._v("，"),e("code",[t._v("pathMap")]),t._v("）。其中"),e("code",[t._v("nameMap")]),t._v("，"),e("code",[t._v("pathMap")]),t._v("中存放的就是路由记录，它们实际上是格式化后的"),e("code",[t._v("routes")]),t._v("对象上的"),e("code",[t._v("RouteConfig")]),t._v("副本。在路由匹配记录（"),e("code",[t._v("this.$route.matched")]),t._v("）中，存放的就是路由记录数组。")]),t._v(" "),e("div",{staticClass:"language-ts line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RouteRecord")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路径")]),t._v("\n  regex"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RegExp "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于匹配路由的正则")]),t._v("\n  components"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Component "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命名视图组件（component配置被格式化成 components.default）")]),t._v("\n  instances"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Vue "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由记录存放的组件实例，在执行路由导航守卫时会通过该对象获取组件实例提取组件内的守卫")]),t._v("\n  name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由名称")]),t._v("\n  parent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RouteRecord "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父级路由记录")]),t._v("\n  redirect"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Location "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("to")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Route "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重定向目标")]),t._v("\n  matchAs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 别名路由真实匹配的路由记录的path")]),t._v("\n  meta"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由记录的元信息")]),t._v("\n  beforeEnter"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Route"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Route"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由前置守卫")]),t._v("\n  props"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Object "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Route"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Object "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Object "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由组件的props")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("ol",{attrs:{start:"4"}},[e("li",[e("code",[t._v("Location")])])]),t._v(" "),e("p",[t._v("表示路由的位置信息对象，用于路由导航时作为目标对象，使用"),e("code",[t._v("router.push()")]),t._v("、"),e("code",[t._v("router.replace()")]),t._v("以及"),e("code",[t._v("route-link")]),t._v("组件传入的配置信息所指的就是"),e("code",[t._v("Location")]),t._v("类型的对象。")]),t._v(" "),e("div",{staticClass:"language-ts line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由名称")]),t._v("\n  path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路径")]),t._v("\n  hash"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 哈希值")]),t._v("\n  query"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询参数")]),t._v("\n  params"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由参数")]),t._v("\n  append"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否追加到当前路由后面")]),t._v("\n  replace"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否替换当前路由")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[t._v("总结起来就是：")]),t._v(" "),e("ul",[e("li",[t._v("路由配置时，传入的每条"),e("code",[t._v("route")]),t._v("是"),e("code",[t._v("RouteConfig")])]),t._v(" "),e("li",[t._v("路由实例化，会格式化转换"),e("code",[t._v("RouteConfig")]),t._v("生成"),e("code",[t._v("RouteRecord")]),t._v("，路由匹配结果中的"),e("code",[t._v("matched")]),t._v("就是"),e("code",[t._v("RouteReCord")]),t._v("组成的数组")]),t._v(" "),e("li",[t._v("路由匹配后，基于"),e("code",[t._v("RouteRecord")]),t._v("创建的结果就是"),e("code",[t._v("Route")]),t._v("类型，路由守卫的"),e("code",[t._v("to")]),t._v("、"),e("code",[t._v("from")]),t._v("以及"),e("code",[t._v("this.$route")]),t._v("都是"),e("code",[t._v("Route")]),t._v("类型")]),t._v(" "),e("li",[t._v("路由导航时，使用的是"),e("code",[t._v("Location")]),t._v("类型的数据，"),e("strong",[t._v("VueRouter")]),t._v("会根据传入的"),e("code",[t._v("Locaiton")]),t._v("进行匹配并执行相关处理")])]),t._v(" "),e("h2",{attrs:{id:"vuerouter安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuerouter安装"}},[t._v("#")]),t._v(" VueRouter安装")]),t._v(" "),e("p",[e("strong",[t._v("VueRouter")]),t._v("是一个"),e("strong",[t._v("Vue")]),t._v("插件，在执行"),e("code",[t._v("Vue.use(VueRouter)")]),t._v("时，会自动执行"),e("code",[t._v("VueRouter.install")]),t._v("方法，并传入"),e("code",[t._v("Vue")]),t._v("实例作为参数安装插件。"),e("code",[t._v("install")]),t._v("方法的基本处理过程如下：")]),t._v(" "),e("ul",[e("li",[t._v("标记成已安装（避免重复安装），将传入的"),e("code",[t._v("Vue")]),t._v("构造函数存储起来，与"),e("code",[t._v("VueRouter")]),t._v("关联，后续在"),e("code",[t._v("VueRouter")]),t._v("内部需要用的"),e("strong",[t._v("Vue")]),t._v("构造函数都是通过该构造函数")]),t._v(" "),e("li",[t._v("使用"),e("code",[t._v("Vue.mixin")]),t._v("全局混入"),e("code",[t._v("beforeCreate")]),t._v("和"),e("code",[t._v("destroyed")]),t._v("钩子")]),t._v(" "),e("li",[t._v("在"),e("code",[t._v("Vue.prototype")]),t._v("上添加"),e("code",[t._v("$router")]),t._v("和"),e("code",[t._v("$route")]),t._v("getter属性，用于在组件中获取路由信息")]),t._v(" "),e("li",[t._v("添加两个全局组件"),e("code",[t._v("RouterView")]),t._v("和"),e("code",[t._v("RouterLink")]),t._v("，分别用于渲染路由组件和生成路由导航链接")]),t._v(" "),e("li",[t._v("通过"),e("code",[t._v("Vue.config.optionMergeStrategies")]),t._v("获取Vue的选项合并策略，并将"),e("code",[t._v("beforeRouteEnter")]),t._v("、"),e("code",[t._v("beforeRouteLeave")]),t._v("和"),e("code",[t._v("beforeRouteUpdate")]),t._v("合并策略设置为与"),e("code",[t._v("create")]),t._v("钩子一样的合并策略（默认是合并成数组并按顺序执行）")])]),t._v(" "),e("p",[e("code",[t._v("beforeCreate")]),t._v("是路由实例化的核心，其处理流程如下（可以先阅读"),e("code",[t._v("VueRouter")]),t._v("实例化的过程再回头阅读这部分）：")]),t._v(" "),e("ul",[e("li",[t._v("判断组件实例是否有"),e("code",[t._v("router")]),t._v("选项，如果有则认为是根路由组件（路由应用组件），做如下处理：\n"),e("ul",[e("li",[t._v("在组件实例上添加"),e("code",[t._v("_routerRoot")]),t._v("属性指向当前实例")]),t._v(" "),e("li",[t._v("在组件实例上添加"),e("code",[t._v("_router")]),t._v("属性指向传入的"),e("code",[t._v("router")]),t._v("实例")]),t._v(" "),e("li",[t._v("执行"),e("code",[t._v("_router.init(this)")]),t._v("方法将当前实例传入作为应用（"),e("code",[t._v("app")]),t._v("）参数初始化路由，该方法执行后做如下处理：\n"),e("ul",[e("li",[t._v("将当前实例添加到"),e("code",[t._v("router.apps")]),t._v("数组中（添加应用），并监听器"),e("code",[t._v("destroyed")]),t._v("的钩子，在应用销毁时从"),e("code",[t._v("router.apps")]),t._v("中移除，并更新主应用即其它销毁相关的操作")]),t._v(" "),e("li",[t._v("如果还未设置主应用则将"),e("code",[t._v("router.app")]),t._v("设置为"),e("code",[t._v("app")])]),t._v(" "),e("li",[t._v("通过"),e("code",[t._v("router.history")]),t._v("获取"),e("code",[t._v("History")]),t._v("实例，执行"),e("code",[t._v("history.transitionTo")]),t._v("方法进行导航过渡，导航成功后设置滚动行为并添加浏览器前进/后退事件监听器（"),e("code",[t._v("popstate")]),t._v("或"),e("code",[t._v("hashchange")]),t._v("）")]),t._v(" "),e("li",[t._v("设置路由监听器，在路由变化时，遍历"),e("code",[t._v("router.apps")]),t._v("的应用列表，更新"),e("code",[t._v("app._route")]),t._v("属性，由于"),e("code",[t._v("_route")]),t._v("属性是响应式的，更新后会触发视图更新，从而触发"),e("code",[t._v("RouterView")]),t._v("组件的"),e("code",[t._v("render")]),t._v("方法，更新路由组件渲染")])])]),t._v(" "),e("li",[t._v("使用"),e("code",[t._v("Vue.util.defineReactive")]),t._v("方法在组件实例上定义"),e("code",[t._v("_route")]),t._v("响应式属性（更新时会触发"),e("code",[t._v("RouterView")]),t._v("重新渲染），其初始值为"),e("code",[t._v("router.history.current")]),t._v("（即当前路由历史）。之后调用"),e("code",[t._v("registerInstance(this, this)")]),t._v("方法注册当前实例到路由中，其基本逻辑就是如果当前组件的父组件是"),e("code",[t._v("RouterView")]),t._v("组件，则调用"),e("code",[t._v("RouterView")]),t._v("组件实例的"),e("code",[t._v("data.registerRouteInstance")]),t._v("方法，将当前组件实例添加到匹配的路由"),e("code",[t._v("instances")]),t._v("属性当中")])])]),t._v(" "),e("li",[t._v("如果组件实例没有"),e("code",[t._v("router")]),t._v("选项，则认为是非根路由组件，则在组件实例上添加"),e("code",[t._v("_routerRoot")]),t._v("属性，其值为"),e("code",[t._v("this.$parent._routerRoot")]),t._v("，即父组件的"),e("code",[t._v("_routerRoot")]),t._v("属性。由于Vue的运作机制机制是创建阶段是从父组件到子组件，挂在阶段是从子组件到父组件的顺序。所以当子组件的"),e("code",[t._v("beforeCreate")]),t._v("钩子执行时，父组件的"),e("code",[t._v("beforeCreate")]),t._v("钩子已经执行完毕，层层递进，所有子组件获取到的"),e("code",[t._v("_routerRoot")]),t._v("属性都是根路由组件定义的"),e("code",[t._v("_routerRoot")]),t._v("属性")]),t._v(" "),e("li",[t._v("调用"),e("code",[t._v("registerInstance(this)")]),t._v("函数注册当前实例到路由中，将当前组件实例与"),e("code",[t._v("<router-view>")]),t._v("组件关联。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"/images/vue-router3/install.png",alt:"VueRouter-install"}})]),t._v(" "),e("h2",{attrs:{id:"vuerouter实例化与实例方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuerouter实例化与实例方法"}},[t._v("#")]),t._v(" VueRouter实例化与实例方法")]),t._v(" "),e("p",[t._v("调用"),e("code",[t._v("new VueRouter(options)")]),t._v("实例化"),e("code",[t._v("VueRouter")]),t._v("时，主要是初始化路由实例，添加一些实例属性和方法，并根据配置创建路由映射对象以及历史记录对象，其大致流程如下：")]),t._v(" "),e("ul",[e("li",[t._v("实例化各种实例属性和方法\n"),e("ul",[e("li",[e("code",[t._v("app")]),t._v("：存放主应用")]),t._v(" "),e("li",[e("code",[t._v("apps")]),t._v("：存放所有的应用")]),t._v(" "),e("li",[e("code",[t._v("options")]),t._v("：路由配置")]),t._v(" "),e("li",[e("code",[t._v("mode")]),t._v("：路由模式")]),t._v(" "),e("li",[e("code",[t._v("fallback")]),t._v("：是否在不支持history模式时使用hash模式")]),t._v(" "),e("li",[e("code",[t._v("beforeHooks")]),t._v("： 全局前置守卫")]),t._v(" "),e("li",[e("code",[t._v("resolveHooks")]),t._v("：全局解析守卫")]),t._v(" "),e("li",[e("code",[t._v("afterHooks")]),t._v("：全局后置守卫")]),t._v(" "),e("li",[e("code",[t._v("matcher")]),t._v("：路由匹配器")]),t._v(" "),e("li",[e("code",[t._v("history")]),t._v("：历史记录实例")]),t._v(" "),e("li",[e("code",[t._v("currentRoute")]),t._v("：当前路由，是一个getter属性，返回"),e("code",[t._v("this.history.current")]),t._v("的值")])])]),t._v(" "),e("li",[t._v("调用"),e("code",[t._v("createMatcher(options.routes)")]),t._v("创建router匹配器，并存储为实例属性"),e("code",[t._v("matcher")]),t._v("，用于路由匹配与动态添加路由。调用该函数后，会根据传入的"),e("code",[t._v("options.routes")]),t._v("创建"),e("code",[t._v("pathList")]),t._v("、"),e("code",[t._v("pathMap")]),t._v("、"),e("code",[t._v("nameMap")]),t._v("三个路由映射对象，分别路由存储路径、路径对应的路由记录（"),e("code",[t._v("RouteRecord")]),t._v("）、路由名称对应的路由记录，并返回一个包含以下属性用于管理这三个对象的对象：\n"),e("ul",[e("li",[e("code",[t._v("match")]),t._v("：路由匹配方法，用于根据给定的路由位置，获取路由匹配结果（"),e("code",[t._v("Route")]),t._v("）")]),t._v(" "),e("li",[e("code",[t._v("addRoute")]),t._v("：动态添加一条路由记录的方法，该方法闭包引用路由映射对象，执行后更新它们")]),t._v(" "),e("li",[e("code",[t._v("addRoutes")]),t._v("：与"),e("code",[t._v("addRoute")]),t._v("方法类似，用于动态添加多条路由记录")]),t._v(" "),e("li",[e("code",[t._v("getRoutes")]),t._v("：获取所有的路由记录")])])]),t._v(" "),e("li",[t._v("处理路由模式，获取路由模式相关配置后，根据配置决定是否进行路由模式的回退处理")]),t._v(" "),e("li",[t._v("根据路由模式创建相应的"),e("code",[t._v("History")]),t._v("实例，作为"),e("code",[t._v("history")]),t._v("实例属性的值")])]),t._v(" "),e("p",[e("strong",[t._v("VueRouter")]),t._v("实例有以下方法：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("init")]),t._v("：初始化路由，在根路由组件的"),e("code",[t._v("beforeCreate")]),t._v("钩子中调用，调用后会设置主应用、存储应用列表、添加应用销毁监听器、执行首次导航并设置浏览器导航事件监听以及路由更新的监听器")]),t._v(" "),e("li",[e("code",[t._v("match")]),t._v("：根据目标位置匹配路由记录，返回匹配的结果，其实际调用的是"),e("code",[t._v("this.matcher.match")]),t._v("方法")]),t._v(" "),e("li",[e("code",[t._v("resolve")]),t._v("：解析给定的目标位置，调用"),e("code",[t._v("this.match")]),t._v("获取匹配对象后返回一个包含"),e("code",[t._v("route")]),t._v("、"),e("code",[t._v("location")]),t._v("和"),e("code",[t._v("href")]),t._v("的格式化后的对象，通常用于在不执行实际导航的情况下（比如"),e("code",[t._v("router-link")]),t._v("组件的渲染）获取目标位置的路由信息")]),t._v(" "),e("li",[e("code",[t._v("addRoute")]),t._v("：添加新的路由记录，实际调用的是"),e("code",[t._v("this.matcher.addRoute")]),t._v("方法")]),t._v(" "),e("li",[e("code",[t._v("addRoutes")]),t._v("：添加新的路由记录数组，实际调用的是"),e("code",[t._v("this.matcher.addRoutes")]),t._v("方法")]),t._v(" "),e("li",[e("code",[t._v("getRoutes")]),t._v("：获取所有路由记录，实际调用的是"),e("code",[t._v("this.matcher.getRoutes")]),t._v("方法")]),t._v(" "),e("li",[e("code",[t._v("getMatchedComponents")]),t._v("：获取当前路由匹配的所有组件，获取到的是组件的构造函数而不是实例，通常用在服务端渲染的数据预加载时使用")]),t._v(" "),e("li",[e("code",[t._v("push")]),t._v("/"),e("code",[t._v("replace")]),t._v("/"),e("code",[t._v("go")]),t._v("/"),e("code",[t._v("back")]),t._v("/"),e("code",[t._v("forward")]),t._v("：路由导航API，实际调用的是"),e("code",[t._v("this.history.push")]),t._v("/"),e("code",[t._v("this.history.replace")]),t._v("以及"),e("code",[t._v("this.history.go")]),t._v("方法")]),t._v(" "),e("li",[e("code",[t._v("beforeEach")]),t._v("/"),e("code",[t._v("beforeResolve")]),t._v("/"),e("code",[t._v("afterEach")]),t._v("：分别用于注册全局的路由前置守卫、路由解析守卫以及路由后置守卫，以数组的方式分别存放在"),e("code",[t._v("beforeEachHooks")]),t._v("/"),e("code",[t._v("beforeResolveHooks")]),t._v("/"),e("code",[t._v("afterEachHooks")]),t._v("数组中，每次调用会返回一个用于移除该路由守卫的函数。")]),t._v(" "),e("li",[e("code",[t._v("onReady")]),t._v("： 实际调用的是"),e("code",[t._v("history.onReady")]),t._v("，注册路由初始导航完成和错误时的回调函数，多次注册会被处理成一个数组并按顺序执行")]),t._v(" "),e("li",[e("code",[t._v("onError")]),t._v("： 实际调用的是"),e("code",[t._v("history.onError")]),t._v("，注册路由导航过程中出现错误时的回调函数，多次注册会被处理成一个数组并按顺序执行")])]),t._v(" "),e("p",[e("img",{attrs:{src:"/images/vue-router3/router.png",alt:"VueRouter-instance"}})]),t._v(" "),e("h2",{attrs:{id:"导航执行流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导航执行流程"}},[t._v("#")]),t._v(" 导航执行流程")]),t._v(" "),e("p",[t._v("在VueRouter中，路由的导航包含初始化时的初始导航、使用"),e("code",[t._v("RouterLink")]),t._v("组件导航以及编程式的导航（如"),e("code",[t._v("router.push")]),t._v("）、浏览器URL前进后退监听的导航。无论哪一种导航，其最终都是调用了"),e("code",[t._v("router.history")]),t._v("实例属性上的"),e("code",[t._v("transitionTo")]),t._v("方法执行导航，调用"),e("code",[t._v("router.history")]),t._v("实例属性上的"),e("code",[t._v("confirmTransition")]),t._v("方法确认导航。其大致的流程如下：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("执行"),e("code",[t._v("transitionTo")]),t._v("方法，首先根据传入的目标位置尝试调用"),e("code",[t._v("router.match")]),t._v("方法获取目标路由记录"),e("code",[t._v("route")]),t._v("，如果成功则执行下一步，否则，执行"),e("code",[t._v("onError")]),t._v("注册的错误回调函数，并则抛出错误。")])]),t._v(" "),e("li",[e("p",[t._v("将"),e("code",[t._v("route")]),t._v("传入"),e("code",[t._v("confirmTransition")]),t._v("方法，确认导航执行：")]),t._v(" "),e("ul",[e("li",[t._v("获取当前路由并与目标路由进行对比，如果相同则确保浏览器的地址正确并处理滚动，并创建一个重复导航的中断错误，导航中断")]),t._v(" "),e("li",[t._v("根据当前路由和目标路由，提取失活的路由组件、激活的路由组件以及复用（更新）的路由组件")]),t._v(" "),e("li",[t._v("创建路由导航守卫队列，按顺序分别提取失活组件的"),e("code",[t._v("beforeRouteLeave")]),t._v("、全局的路由前置守卫"),e("code",[t._v("beforeEach")]),t._v("、更新组件的更新守卫"),e("code",[t._v("beforeRouteUpdate")]),t._v("、激活组件的路由配置独享守卫"),e("code",[t._v("beforeRouteEnter")]),t._v("以及创建激活异步组件的解析守卫")]),t._v(" "),e("li",[t._v("传入目标路由对象、当前路由对象和next函数，执行创建的守卫队列，执行期间会根据next函数的传值做相应的处理，如果期间发生错误，则抛出导航中断错误")]),t._v(" "),e("li",[t._v("以上执行完后异步组件解析完毕，继续创建路由导航守卫队列，按顺序提取激活组件的内部的"),e("code",[t._v("beforeRouteEnter")]),t._v("守卫，获取全局的"),e("code",[t._v("beforeResolve")]),t._v("守卫")]),t._v(" "),e("li",[t._v("执行获取到的守卫队列")]),t._v(" "),e("li",[t._v("更新"),e("code",[t._v("_route")]),t._v("触发DOM更新")]),t._v(" "),e("li",[t._v("执行导航完成的回调，并确保浏览器的地址正确")]),t._v(" "),e("li",[t._v("执行全局的"),e("code",[t._v("afterEach")]),t._v("导航守卫")]),t._v(" "),e("li",[t._v("如果是初次导航则执行由"),e("code",[t._v("onReady")]),t._v("注册的导航完成回调")]),t._v(" "),e("li",[t._v("DOM更新完成后("),e("code",[t._v("nextTick")]),t._v(")，遍历匹配路由的"),e("code",[t._v("instances")]),t._v("组件实例，执行"),e("code",[t._v("beforeRouteEnter")]),t._v("守卫中，由next函数传入的回调函数")])]),t._v(" "),e("p",[e("img",{attrs:{src:"/images/vue-router3/transition.png",alt:"VueRouter-transitionTo"}})]),t._v(" "),e("h2",{attrs:{id:"routerview组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#routerview组件"}},[t._v("#")]),t._v(" RouterView组件")]),t._v(" "),e("p",[e("code",[t._v("RouterView")]),t._v("组件是"),e("strong",[t._v("VueRouter")]),t._v("的核心组件，它负责渲染当前活跃的路由对应的组件。"),e("code",[t._v("RouterView")]),t._v("组件是一个函数式组件，其基本的原理是"),e("code",[t._v("render")]),t._v("函数依赖了"),e("code",[t._v("_route")]),t._v("属性，在路由切换时，"),e("code",[t._v("_route")]),t._v("属性会更新，从而触发"),e("code",[t._v("render")]),t._v("函数的重新执行，从而渲染新的组件。"),e("code",[t._v("render")]),t._v("函数的基本逻辑如下：")]),t._v(" "),e("ul",[e("li",[t._v("将组件的"),e("code",[t._v("data.routerView")]),t._v("属性标记成"),e("code",[t._v("true")]),t._v("，表示当前组件是"),e("code",[t._v("RouterView")]),t._v("组件，用于计算路由组件的层级")]),t._v(" "),e("li",[t._v("获取组件的上下文，包括父组件的"),e("code",[t._v("$createElement")]),t._v("函数以及组件的名称等")]),t._v(" "),e("li",[t._v("计算当前组件的层级，"),e("code",[t._v("RouterView")]),t._v("组件是支持嵌套路由的，通过不断的往上寻找父组件，每找到有"),e("code",[t._v("data.routerView")]),t._v("属性标记的，层级就加1，并将层级存储到"),e("code",[t._v("data.routerViewDepth")]),t._v("属性中")]),t._v(" "),e("li",[t._v("在遍历获取父组件的过程，会判断组件是否被包裹在"),e("code",[t._v("keep-alive")]),t._v("标签中，如果是则会设置失活标记")]),t._v(" "),e("li",[t._v("如果当前组件是"),e("code",[t._v("keep-alive")]),t._v("标签包裹的，则从缓存中获取组件，并传递"),e("code",[t._v("props")]),t._v("后渲染，否则指向下一步")]),t._v(" "),e("li",[t._v("根据获取到层级，从匹配的路由数组中（"),e("code",[t._v("route.matched")]),t._v("）找到对应的路由配置，进而获取到对应的路由组件")]),t._v(" "),e("li",[t._v("缓存获取到组件")]),t._v(" "),e("li",[t._v("定义"),e("code",[t._v("data.registerRouteInstance")]),t._v("方法用于注册和移除应用组件实例，该方法在应用组件实例的"),e("code",[t._v("beforeCreate")]),t._v("和"),e("code",[t._v("destroyed")]),t._v("钩子被调用")]),t._v(" "),e("li",[t._v("添加"),e("code",[t._v("init")]),t._v("和"),e("code",[t._v("prepatch")]),t._v("两个VNode钩子，保证当相同的组件在不同路由之间复用以及在keep-alive激活时，可以将实例添加到"),e("code",[t._v("matched.instances")]),t._v("中")]),t._v(" "),e("li",[t._v("合并并传递"),e("code",[t._v("props")])]),t._v(" "),e("li",[t._v("渲染组件")])]),t._v(" "),e("p",[e("img",{attrs:{src:"/images/vue-router3/view.png",alt:"VueRouter-RouterView"}})]),t._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("p",[t._v("完整的基本流程如下：")]),t._v(" "),e("p",[e("img",{attrs:{src:"/images/vue-router3/VueRouter.png",alt:"VueRouter"}})])])])])}),[],!1,null,null,null);s.default=r.exports}}]);